var e,t;"function"==typeof(e=globalThis.define)&&(t=e,e=null),(()=>{function e(e,t,r,n){Object.defineProperty(e,t,{get:r,set:n,enumerable:!0,configurable:!0})}var t=("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{}).parcelRequiref356;t.register("hRmgi",function(r,n){e(r.exports,"signWithApiKey",()=>l);var o=t("2gako"),i=t("i2RRo");let l=async e=>{let{content:t,publicKey:r,privateKey:n}=e,o=await a({uncompressedPrivateKeyHex:n,compressedPublicKeyHex:r});return await u({key:o,content:t})};async function a(e){let{uncompressedPrivateKeyHex:t,compressedPublicKeyHex:r}=e,n=(0,o.convertTurnkeyApiKeyToJwk)({uncompressedPrivateKeyHex:t,compressedPublicKeyHex:r});return await crypto.subtle.importKey("jwk",n,{name:"ECDSA",namedCurve:"P-256"},!1,["sign"])}async function u(e){let{key:t,content:r}=e,n=await crypto.subtle.sign({name:"ECDSA",hash:"SHA-256"},t,new TextEncoder().encode(r)),o=function(e){let t;if(e.length%2!=0||0==e.length||e.length>132)throw Error("Invalid IEEE P1363 signature encoding. Length: "+e.length);let r=c(e.subarray(0,e.length/2)),n=c(e.subarray(e.length/2,e.length)),o=0,i=2+r.length+1+1+n.length;return i>=128?((t=new Uint8Array(i+3))[o++]=48,t[o++]=129):(t=new Uint8Array(i+2))[o++]=48,t[o++]=i,t[o++]=2,t[o++]=r.length,t.set(r,o),o+=r.length,t[o++]=2,t[o++]=n.length,t.set(n,o),t}(new Uint8Array(n));return(0,i.uint8ArrayToHexString)(o)}function c(e){let t=0;for(;t<e.length&&0==e[t];)t++;t==e.length&&(t=e.length-1);let r=0;(128&e[t])==128&&(r=1);let n=new Uint8Array(e.length-t+r);return n.set(e.subarray(t),r),n}}),t.register("2gako",function(r,n){e(r.exports,"convertTurnkeyApiKeyToJwk",()=>l);var o=t("8vc7c"),i=t("i2RRo");function l(e){let t;let{uncompressedPrivateKeyHex:r,compressedPublicKeyHex:n}=e;try{t=(0,o.pointDecode)((0,i.uint8ArrayFromHexString)(n))}catch(e){throw Error("unable to load API key: invalid public key. Did you switch your public and private key by accident? Is your public key a valid, compressed P-256 public key?")}return t.d=(0,i.hexStringToBase64url)(r,i.DEFAULT_JWK_MEMBER_BYTE_LENGTH),t}}),t.register("8vc7c",function(r,n){e(r.exports,"pointDecode",()=>g);var o=t("azWqP");/**
 * Code modified from https://github.com/google/tink/blob/6f74b99a2bfe6677e3670799116a57268fd067fa/javascript/subtle/elliptic_curves.ts
 * - The implementation of integerToByteArray has been modified to augment the resulting byte array to a certain length.
 * - The implementation of PointDecode has been modified to decode both compressed and uncompressed points by checking for correct format
 * - Method isP256CurvePoint added to check whether an uncompressed point is valid
 *
 * @license
 * Copyright 2020 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */function i(){return BigInt("115792089210356248762697446949407573530086143415290314195533631308867097853951")}function l(){return BigInt("0x5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b")}function a(e){return BigInt("0x"+(0,o.toHex)(e))}function u(e,t){let r=e.toString(16),n=2*t,i="";if(n<r.length)throw Error(`cannot pack integer with ${r.length} hex chars into ${t} bytes`);return i="0".repeat(n-r.length),(0,o.fromHex)(i+r)}function c(e,t){let r=BigInt(1)<<BigInt(t);return(e&r)!==BigInt(0)}function g(e){if(33!==e.length&&65!==e.length)throw Error("Invalid length: point is not in compressed or uncompressed format");if((2===e[0]||3===e[0])&&33==e.length){let t=3===e[0],r=a(e.subarray(1,e.length)),n=i();if(r<BigInt(0)||r>=n)throw Error("x is out of range");let g=function(e,t){let r=i(),n=r-BigInt(3),o=l(),a=function(e,t){if(t<=BigInt(0))throw Error("p must be positive");let r=e%t;if(c(t,0)&&c(t,1)){let e=t+BigInt(1)>>BigInt(2),n=function(e,t,r){if(t===BigInt(0))return BigInt(1);let n=e,o=t.toString(2);for(let t=1;t<o.length;++t)n=n*n%r,"1"===o[t]&&(n=n*e%r);return n}(r,e,t);if(n*n%t!==r)throw Error("could not find a modular square root");return n}throw Error("unsupported modulus value")}(((e*e+n)*e+o)%r,r);return t!==c(a,0)&&(a=(r-a)%r),a}(r,t),s={kty:"EC",crv:"P-256",x:(0,o.toBase64)(u(r,32)),y:(0,o.toBase64)(u(g,32)),ext:!0};return s}if(4===e[0]&&65==e.length){let t=a(e.subarray(1,33)),r=a(e.subarray(33,65)),n=i();if(t<BigInt(0)||t>=n||r<BigInt(0)||r>=n||!function(e,t){let r=i(),n=r-BigInt(3),o=l(),a=t**BigInt(2)%r;return a===((e*e+n)*e+o)%r}(t,r))throw Error("invalid uncompressed x and y coordinates");let c={kty:"EC",crv:"P-256",x:(0,o.toBase64)(u(t,32)),y:(0,o.toBase64)(u(r,32)),ext:!0};return c}throw Error("invalid format")}}),t.register("azWqP",function(t,r){/**
 * Code modified from https://github.com/google/tink/blob/6f74b99a2bfe6677e3670799116a57268fd067fa/javascript/subtle/bytes.ts
 *
 * @license
 * Copyright 2020 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */function n(e){if(e.length%2!=0)throw Error("Hex string length must be multiple of 2");let t=new Uint8Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=parseInt(e.substring(r,r+2),16);return t}function o(e){let t="";for(let r=0;r<e.length;r++){let n=e[r].toString(16);t+=n.length>1?n:"0"+n}return t}function i(e,t){let r=btoa(function(e){let t="";for(let r=0;r<e.length;r+=1)t+=String.fromCharCode(e[r]);return t}(e)).replace(/=/g,"");return r.replace(/\+/g,"-").replace(/\//g,"_")}e(t.exports,"fromHex",()=>n),e(t.exports,"toHex",()=>o),e(t.exports,"toBase64",()=>i)}),t.register("i2RRo",function(t,r){e(t.exports,"DEFAULT_JWK_MEMBER_BYTE_LENGTH",()=>n),e(t.exports,"stringToBase64urlString",()=>o),e(t.exports,"hexStringToBase64url",()=>i),e(t.exports,"uint8ArrayFromHexString",()=>a),e(t.exports,"uint8ArrayToHexString",()=>l),e(t.exports,"hexToAscii",()=>u),e(t.exports,"normalizePadding",()=>c);let n=32;function o(e){let t=function(e){let t;if(0==arguments.length)throw TypeError("1 argument required, but only 0 present.");for(t=0,e=`${e}`;t<e.length;t++)if(e.charCodeAt(t)>255)throw Error(`InvalidCharacterError: found code point greater than 255:${e.charCodeAt(t)} at position ${t}`);let r="";for(t=0;t<e.length;t+=3){let n=[void 0,void 0,void 0,void 0];n[0]=e.charCodeAt(t)>>2,n[1]=(3&e.charCodeAt(t))<<4,e.length>t+1&&(n[1]|=e.charCodeAt(t+1)>>4,n[2]=(15&e.charCodeAt(t+1))<<2),e.length>t+2&&(n[2]|=e.charCodeAt(t+2)>>6,n[3]=63&e.charCodeAt(t+2));for(let e=0;e<n.length;e++)void 0===n[e]?r+="=":r+=function(e){if(e>=0&&e<64)return"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"[e]}(n[e])}return r}(e);return t.replace(/\+/g,"-").replace(/\//g,"_").replace(/=/g,"")}function i(e,t){let r=e.padStart(2*Math.ceil(e.length/2),"0"),n=a(r,t);return o(n.reduce((e,t)=>e+String.fromCharCode(t),""))}function l(e){return e.reduce((e,t)=>e+t.toString(16).padStart(2,"0"),"")}let a=(e,t)=>{if(!e||e.length%2!=0||!/^[0-9A-Fa-f]+$/.test(e))throw Error(`cannot create uint8array from invalid hex string: "${e}"`);let r=new Uint8Array(e.match(/../g).map(e=>parseInt(e,16)));if(!t)return r;if(e.length/2>t)throw Error("hex value cannot fit in a buffer of "+t+" byte(s)");let n=new Uint8Array(t);return n.set(r,t-r.length),n};function u(e){let t="";for(let r=0;r<e.length;r+=2)t+=String.fromCharCode(parseInt(e.substr(r,2),16));return t}let c=(e,t)=>{let r=t-e.length;if(r>0){let t=new Uint8Array(r).fill(0);return new Uint8Array([...t,...e])}if(r<0){let n=-1*r,o=0;for(let t=0;t<n&&t<e.length;t++)0===e[t]&&o++;if(o!==n)throw Error(`invalid number of starting zeroes. Expected number of zeroes: ${n}. Found: ${o}.`);return e.slice(n,n+t)}return e}})})(),globalThis.define=t;